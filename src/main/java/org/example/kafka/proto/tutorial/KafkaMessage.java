// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: src/main/java/org/example/proto/message.proto
// Protobuf Java Version: 4.28.3

package org.example.kafka.proto.tutorial;

/**
 * Protobuf type {@code KafkaMessage}
 */
public final class KafkaMessage extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:KafkaMessage)
    KafkaMessageOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 3,
      /* suffix= */ "",
      KafkaMessage.class.getName());
  }
  // Use KafkaMessage.newBuilder() to construct.
  private KafkaMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private KafkaMessage() {
    id_ = "";
    requestType_ = 0;
    methosType_ = 0;
    body_ = "";
    replyTo_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return KafkaMessageSample.internal_static_tutorial_KafkaMessage_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return KafkaMessageSample.internal_static_tutorial_KafkaMessage_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            KafkaMessage.class, Builder.class);
  }

  /**
   * Protobuf enum {@code KafkaMessage.RequestType}
   */
  public enum RequestType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RESPONSE = 0;</code>
     */
    RESPONSE(0),
    /**
     * <code>NOTIFY = 1;</code>
     */
    NOTIFY(1),
    /**
     * <code>REQUEST = 3;</code>
     */
    REQUEST(3),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        RequestType.class.getName());
    }
    /**
     * <code>RESPONSE = 0;</code>
     */
    public static final int RESPONSE_VALUE = 0;
    /**
     * <code>NOTIFY = 1;</code>
     */
    public static final int NOTIFY_VALUE = 1;
    /**
     * <code>REQUEST = 3;</code>
     */
    public static final int REQUEST_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static RequestType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static RequestType forNumber(int value) {
      switch (value) {
        case 0: return RESPONSE;
        case 1: return NOTIFY;
        case 3: return REQUEST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<RequestType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        RequestType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<RequestType>() {
            public RequestType findValueByNumber(int number) {
              return RequestType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return KafkaMessage.getDescriptor().getEnumTypes().get(0);
    }

    private static final RequestType[] VALUES = values();

    public static RequestType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private RequestType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:KafkaMessage.RequestType)
  }

  /**
   * Protobuf enum {@code KafkaMessage.MethodType}
   */
  public enum MethodType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>CREAT = 0;</code>
     */
    CREAT(0),
    /**
     * <code>GET = 1;</code>
     */
    GET(1),
    /**
     * <code>UPDATE = 2;</code>
     */
    UPDATE(2),
    /**
     * <code>DELETE = 3;</code>
     */
    DELETE(3),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 3,
        /* suffix= */ "",
        MethodType.class.getName());
    }
    /**
     * <code>CREAT = 0;</code>
     */
    public static final int CREAT_VALUE = 0;
    /**
     * <code>GET = 1;</code>
     */
    public static final int GET_VALUE = 1;
    /**
     * <code>UPDATE = 2;</code>
     */
    public static final int UPDATE_VALUE = 2;
    /**
     * <code>DELETE = 3;</code>
     */
    public static final int DELETE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static MethodType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MethodType forNumber(int value) {
      switch (value) {
        case 0: return CREAT;
        case 1: return GET;
        case 2: return UPDATE;
        case 3: return DELETE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MethodType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MethodType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MethodType>() {
            public MethodType findValueByNumber(int number) {
              return MethodType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return KafkaMessage.getDescriptor().getEnumTypes().get(1);
    }

    private static final MethodType[] VALUES = values();

    public static MethodType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MethodType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:KafkaMessage.MethodType)
  }

  public static final int ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile Object id_ = "";
  /**
   * <code>string id = 1;</code>
   * @return The id.
   */
  @Override
  public String getId() {
    Object ref = id_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      id_ = s;
      return s;
    }
  }
  /**
   * <code>string id = 1;</code>
   * @return The bytes for id.
   */
  @Override
  public com.google.protobuf.ByteString
      getIdBytes() {
    Object ref = id_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      id_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REQUEST_TYPE_FIELD_NUMBER = 2;
  private int requestType_ = 0;
  /**
   * <code>.KafkaMessage.RequestType request_type = 2;</code>
   * @return The enum numeric value on the wire for requestType.
   */
  @Override public int getRequestTypeValue() {
    return requestType_;
  }
  /**
   * <code>.KafkaMessage.RequestType request_type = 2;</code>
   * @return The requestType.
   */
  @Override public RequestType getRequestType() {
    RequestType result = RequestType.forNumber(requestType_);
    return result == null ? RequestType.UNRECOGNIZED : result;
  }

  public static final int METHOS_TYPE_FIELD_NUMBER = 3;
  private int methosType_ = 0;
  /**
   * <code>.KafkaMessage.MethodType methos_type = 3;</code>
   * @return The enum numeric value on the wire for methosType.
   */
  @Override public int getMethosTypeValue() {
    return methosType_;
  }
  /**
   * <code>.KafkaMessage.MethodType methos_type = 3;</code>
   * @return The methosType.
   */
  @Override public MethodType getMethosType() {
    MethodType result = MethodType.forNumber(methosType_);
    return result == null ? MethodType.UNRECOGNIZED : result;
  }

  public static final int BODY_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile Object body_ = "";
  /**
   * <code>string body = 4;</code>
   * @return The body.
   */
  @Override
  public String getBody() {
    Object ref = body_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      body_ = s;
      return s;
    }
  }
  /**
   * <code>string body = 4;</code>
   * @return The bytes for body.
   */
  @Override
  public com.google.protobuf.ByteString
      getBodyBytes() {
    Object ref = body_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      body_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int REPLY_TO_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile Object replyTo_ = "";
  /**
   * <code>string reply_to = 5;</code>
   * @return The replyTo.
   */
  @Override
  public String getReplyTo() {
    Object ref = replyTo_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      replyTo_ = s;
      return s;
    }
  }
  /**
   * <code>string reply_to = 5;</code>
   * @return The bytes for replyTo.
   */
  @Override
  public com.google.protobuf.ByteString
      getReplyToBytes() {
    Object ref = replyTo_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      replyTo_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, id_);
    }
    if (requestType_ != RequestType.RESPONSE.getNumber()) {
      output.writeEnum(2, requestType_);
    }
    if (methosType_ != MethodType.CREAT.getNumber()) {
      output.writeEnum(3, methosType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(body_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, body_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(replyTo_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, replyTo_);
    }
    getUnknownFields().writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(id_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, id_);
    }
    if (requestType_ != RequestType.RESPONSE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, requestType_);
    }
    if (methosType_ != MethodType.CREAT.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, methosType_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(body_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, body_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(replyTo_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, replyTo_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof KafkaMessage)) {
      return super.equals(obj);
    }
    KafkaMessage other = (KafkaMessage) obj;

    if (!getId()
        .equals(other.getId())) return false;
    if (requestType_ != other.requestType_) return false;
    if (methosType_ != other.methosType_) return false;
    if (!getBody()
        .equals(other.getBody())) return false;
    if (!getReplyTo()
        .equals(other.getReplyTo())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ID_FIELD_NUMBER;
    hash = (53 * hash) + getId().hashCode();
    hash = (37 * hash) + REQUEST_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + requestType_;
    hash = (37 * hash) + METHOS_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + methosType_;
    hash = (37 * hash) + BODY_FIELD_NUMBER;
    hash = (53 * hash) + getBody().hashCode();
    hash = (37 * hash) + REPLY_TO_FIELD_NUMBER;
    hash = (53 * hash) + getReplyTo().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static KafkaMessage parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static KafkaMessage parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static KafkaMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static KafkaMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static KafkaMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static KafkaMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static KafkaMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static KafkaMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static KafkaMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static KafkaMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static KafkaMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static KafkaMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(KafkaMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code KafkaMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:KafkaMessage)
      KafkaMessageOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KafkaMessageSample.internal_static_tutorial_KafkaMessage_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KafkaMessageSample.internal_static_tutorial_KafkaMessage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KafkaMessage.class, Builder.class);
    }

    // Construct using KafkaMessage.newBuilder()
    private Builder() {

    }

    private Builder(
        BuilderParent parent) {
      super(parent);

    }
    @Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      id_ = "";
      requestType_ = 0;
      methosType_ = 0;
      body_ = "";
      replyTo_ = "";
      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return KafkaMessageSample.internal_static_tutorial_KafkaMessage_descriptor;
    }

    @Override
    public KafkaMessage getDefaultInstanceForType() {
      return KafkaMessage.getDefaultInstance();
    }

    @Override
    public KafkaMessage build() {
      KafkaMessage result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public KafkaMessage buildPartial() {
      KafkaMessage result = new KafkaMessage(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(KafkaMessage result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.id_ = id_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.requestType_ = requestType_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.methosType_ = methosType_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.body_ = body_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.replyTo_ = replyTo_;
      }
    }

    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof KafkaMessage) {
        return mergeFrom((KafkaMessage)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(KafkaMessage other) {
      if (other == KafkaMessage.getDefaultInstance()) return this;
      if (!other.getId().isEmpty()) {
        id_ = other.id_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.requestType_ != 0) {
        setRequestTypeValue(other.getRequestTypeValue());
      }
      if (other.methosType_ != 0) {
        setMethosTypeValue(other.getMethosTypeValue());
      }
      if (!other.getBody().isEmpty()) {
        body_ = other.body_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (!other.getReplyTo().isEmpty()) {
        replyTo_ = other.replyTo_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              id_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              requestType_ = input.readEnum();
              bitField0_ |= 0x00000002;
              break;
            } // case 16
            case 24: {
              methosType_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              body_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              replyTo_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private Object id_ = "";
    /**
     * <code>string id = 1;</code>
     * @return The id.
     */
    public String getId() {
      Object ref = id_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        id_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @return The bytes for id.
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      Object ref = id_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string id = 1;</code>
     * @param value The id to set.
     * @return This builder for chaining.
     */
    public Builder setId(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearId() {
      id_ = getDefaultInstance().getId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string id = 1;</code>
     * @param value The bytes for id to set.
     * @return This builder for chaining.
     */
    public Builder setIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      id_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private int requestType_ = 0;
    /**
     * <code>.KafkaMessage.RequestType request_type = 2;</code>
     * @return The enum numeric value on the wire for requestType.
     */
    @Override public int getRequestTypeValue() {
      return requestType_;
    }
    /**
     * <code>.KafkaMessage.RequestType request_type = 2;</code>
     * @param value The enum numeric value on the wire for requestType to set.
     * @return This builder for chaining.
     */
    public Builder setRequestTypeValue(int value) {
      requestType_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>.KafkaMessage.RequestType request_type = 2;</code>
     * @return The requestType.
     */
    @Override
    public RequestType getRequestType() {
      RequestType result = RequestType.forNumber(requestType_);
      return result == null ? RequestType.UNRECOGNIZED : result;
    }
    /**
     * <code>.KafkaMessage.RequestType request_type = 2;</code>
     * @param value The requestType to set.
     * @return This builder for chaining.
     */
    public Builder setRequestType(RequestType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000002;
      requestType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.KafkaMessage.RequestType request_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestType() {
      bitField0_ = (bitField0_ & ~0x00000002);
      requestType_ = 0;
      onChanged();
      return this;
    }

    private int methosType_ = 0;
    /**
     * <code>.KafkaMessage.MethodType methos_type = 3;</code>
     * @return The enum numeric value on the wire for methosType.
     */
    @Override public int getMethosTypeValue() {
      return methosType_;
    }
    /**
     * <code>.KafkaMessage.MethodType methos_type = 3;</code>
     * @param value The enum numeric value on the wire for methosType to set.
     * @return This builder for chaining.
     */
    public Builder setMethosTypeValue(int value) {
      methosType_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>.KafkaMessage.MethodType methos_type = 3;</code>
     * @return The methosType.
     */
    @Override
    public MethodType getMethosType() {
      MethodType result = MethodType.forNumber(methosType_);
      return result == null ? MethodType.UNRECOGNIZED : result;
    }
    /**
     * <code>.KafkaMessage.MethodType methos_type = 3;</code>
     * @param value The methosType to set.
     * @return This builder for chaining.
     */
    public Builder setMethosType(MethodType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      methosType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.KafkaMessage.MethodType methos_type = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMethosType() {
      bitField0_ = (bitField0_ & ~0x00000004);
      methosType_ = 0;
      onChanged();
      return this;
    }

    private Object body_ = "";
    /**
     * <code>string body = 4;</code>
     * @return The body.
     */
    public String getBody() {
      Object ref = body_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        body_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string body = 4;</code>
     * @return The bytes for body.
     */
    public com.google.protobuf.ByteString
        getBodyBytes() {
      Object ref = body_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        body_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string body = 4;</code>
     * @param value The body to set.
     * @return This builder for chaining.
     */
    public Builder setBody(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      body_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>string body = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearBody() {
      body_ = getDefaultInstance().getBody();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <code>string body = 4;</code>
     * @param value The bytes for body to set.
     * @return This builder for chaining.
     */
    public Builder setBodyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      body_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private Object replyTo_ = "";
    /**
     * <code>string reply_to = 5;</code>
     * @return The replyTo.
     */
    public String getReplyTo() {
      Object ref = replyTo_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        replyTo_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>string reply_to = 5;</code>
     * @return The bytes for replyTo.
     */
    public com.google.protobuf.ByteString
        getReplyToBytes() {
      Object ref = replyTo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        replyTo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string reply_to = 5;</code>
     * @param value The replyTo to set.
     * @return This builder for chaining.
     */
    public Builder setReplyTo(
        String value) {
      if (value == null) { throw new NullPointerException(); }
      replyTo_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>string reply_to = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearReplyTo() {
      replyTo_ = getDefaultInstance().getReplyTo();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <code>string reply_to = 5;</code>
     * @param value The bytes for replyTo to set.
     * @return This builder for chaining.
     */
    public Builder setReplyToBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      replyTo_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:KafkaMessage)
  }

  // @@protoc_insertion_point(class_scope:KafkaMessage)
  private static final KafkaMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new KafkaMessage();
  }

  public static KafkaMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KafkaMessage>
      PARSER = new com.google.protobuf.AbstractParser<KafkaMessage>() {
    @Override
    public KafkaMessage parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<KafkaMessage> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<KafkaMessage> getParserForType() {
    return PARSER;
  }

  @Override
  public KafkaMessage getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

